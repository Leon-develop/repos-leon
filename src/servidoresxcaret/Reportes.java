/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package servidoresxcaret;

import Servicios.Conexion;
import com.lowagie.text.Font;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import modelo.ReportesP;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Leo Gonz√°lez
 */
public class Reportes extends javax.swing.JInternalFrame {
 
 public Connection conexion;
   
          ReportesP r=new ReportesP();
          String joption;
    /**
     * Creates new form Reportes
     */
    public Reportes() {
        initComponents();
         r.ver(table);
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        int column=table.getColumnModel().getColumnIndexAtX(evt.getX());
        int row=evt.getY()/table.getRowHeight();
        if (row<table.getRowCount()&& row>=0 && column<table.getColumnCount()&& column>=0) {
            Object value=table.getValueAt(row, column);

            if (value instanceof JButton) {
                ((JButton)value).doClick();
                JButton boton=(JButton)value;

                if(boton.getName().equals("1")){
                    this.reporteudn();
                }else if(boton.getName().equals("2")){
                    this.reportetodo();
                }else if(boton.getName().equals("3")){
                    this.reporteTipo();
                }else if(boton.getName().equals("4")){
                    this.reporteEstado();

                }}}
    }//GEN-LAST:event_tableMouseClicked
public void reporteudn(){
    try{

            String cadena = "jdbc:mysql://localhost:3306/xcaretservers"; //cadena de conexion
            Class.forName("org.gjt.mm.mysql.Driver");//Carga una clase que sirve para conectar la conexion
            conexion = DriverManager.getConnection(cadena,"root","");
            String ruta=System.getProperty("user.dir")+"/src/reportes/ReporteUdn.jasper";
            Map map= new HashMap();
            map.put("udn",joption=JOptionPane.showInputDialog(null,"Escribe la unidada desees consultar"));  
            JasperReport jasperReport =(JasperReport)JRLoader.loadObjectFromFile(ruta);
            JasperPrint print=JasperFillManager.fillReport( jasperReport,map, conexion);
            JasperViewer view=new JasperViewer(print,false);
            view.setTitle("Reporte Udn");
            view.setVisible(true);

        }   catch (Exception ex) {
            ex.printStackTrace();
        }
}
public void reportetodo(){
   

             Conexion con=new Conexion();
       Connection cnn=con.obtener();
        try{
           
           
            String ruta=System.getProperty("user.dir")+"/src/reportes/ReporteTodo.jasper";
        JasperReport jasperReport =(JasperReport)JRLoader.loadObjectFromFile(ruta);
        
        JasperPrint print=JasperFillManager.fillReport(jasperReport,null, cnn);
        JasperViewer view=new JasperViewer(print,false);
        view.setVisible(true);
        
     } catch (Exception ex) {
         System.err.println("Erron al generara el reporte "+ex.getMessage());
          }
        
}public void reporteEstado(){
  

try{

            String cadena = "jdbc:mysql://localhost:3306/xcaretservers"; //cadena de conexion
            Class.forName("org.gjt.mm.mysql.Driver");//Carga una clase que sirve para conectar la conexion
            conexion = DriverManager.getConnection(cadena,"root","");
            String ruta=System.getProperty("user.dir")+"/src/reportes/ReporteEstado.jasper";
            Map map= new HashMap();
             Object Estado = JOptionPane.showInputDialog(null,"Seleccione Un Estado","Estado de servidores", JOptionPane.QUESTION_MESSAGE, null,
             new Object[] { "Running", "Off","Replica"},"");
            map.put("estado",Estado);
            JasperReport jasperReport =(JasperReport)JRLoader.loadObjectFromFile(ruta);
            JasperPrint print=JasperFillManager.fillReport( jasperReport,map, conexion);
            JasperViewer view=new JasperViewer(print,false);
            view.setTitle("");
            view.setVisible(true);

        }   catch (Exception ex) {
            ex.printStackTrace();
   }     
}
public void reporteTipo(){
  

try{

            String cadena = "jdbc:mysql://localhost:3306/xcaretservers"; //cadena de conexion
            Class.forName("org.gjt.mm.mysql.Driver");//Carga una clase que sirve para conectar la conexion
            conexion = DriverManager.getConnection(cadena,"root","");
            String ruta=System.getProperty("user.dir")+"/src/reportes/ReporteTipo.jasper";
            Map map= new HashMap();
             Object Tipo = JOptionPane.showInputDialog(null,"Seleccione Un Tipo","Tipo de servidores", JOptionPane.QUESTION_MESSAGE, null,
             new Object[] { "Virtual", "Fisico"},"");
            map.put("tipo",Tipo);
            JasperReport jasperReport =(JasperReport)JRLoader.loadObjectFromFile(ruta);
            JasperPrint print=JasperFillManager.fillReport( jasperReport,map, conexion);
            JasperViewer view=new JasperViewer(print,false);
            view.setTitle("");
            view.setVisible(true);

        }   catch (Exception ex) {
            ex.printStackTrace();
   }     
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
